{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1867319\\\\Documents\\\\GitHub\\\\H-2023-Projet-Synthese\\\\Service_Video\\\\react_js\\\\src\\\\components\\\\adminListe\\\\AdminListeForfait.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport { ReactComponent as EditSymbol } from \"./../../images/symboles/edit.svg\";\nimport { ReactComponent as CloseSymbol } from \"./../../images/symboles/close.svg\";\nimport AdminModalForfait from \"../modals/admin/AdminModalForfait\";\nimport Axios from 'axios';\n\n/**\r\n * Affiche la liste des forfaits sur la DB.\r\n * Cet affichage permet de faire des ajout/modifications/suppression de forfaits.\r\n * @param {*} props\r\n * @param {[]} props.listShown liste des Forfaits inscrit sur la DB.\r\n * @param {() => void} props.updateListeForfait Permet de relancer \"getListeAdminForfait()\" pour remettre à jour la liste.\r\n * @returns \r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminListeForfait(props) {\n  _s();\n  const [isAddForfait, setIsAddForfait] = useState(false);\n  const [forfaitModifActuel, setForfaitModifActuel] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isAddForfait ? /*#__PURE__*/_jsxDEV(AdminModalForfait, {\n      setModalShow: () => setIsAddForfait(),\n      addForfait: (nom, type, prix, description) => addForfait(nom, type, prix, description)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }, this) : null, forfaitModifActuel !== null ? /*#__PURE__*/_jsxDEV(AdminModalForfait, {\n      setModalShow: () => setForfaitModifActuel(null),\n      modifForfait: (id, nom, type, prix, description) => modifForfait(id, nom, type, prix, description),\n      forfaitModifActuel: forfaitModifActuel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 44\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" bg-slate-500 hover:bg-slate-700 text-white font-bold py-2 px-4 rounded-2xl mt-7\",\n      onClick: () => setIsAddForfait(true),\n      children: \"Ajouter un forfait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"white-bx w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"my-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.listShown.map(forfait => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: forfait.nom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forfait.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forfait.prix\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forfait.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"flex flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(EditSymbol, {\n              className: \"w-6 mx-2 fill-slate-500 hover:fill-slate-700\",\n              onClick: () => setForfaitModifActuel(forfait)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CloseSymbol, {\n              className: \"w-6  mx-1 fill-slate-500 hover:fill-slate-700\",\n              onClick: () => deleteForfait(forfait.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  /**\r\n   * Ajouter un nouveau forfait\r\n   * @param {*} nom nom du forfait\r\n   * @param {*} type type de forfait\r\n   * @param {*} prix prix du forfait\r\n   * @param {*} description description du forfait\r\n   */\n  function addForfait(nom, type, prix, description) {\n    Axios.post(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {\n      nom: nom,\n      type: type,\n      prix: prix,\n      description: description\n    }).then(response => {\n      if (response.data.Forfait) {\n        props.updateListeForfait();\n        setIsAddForfait(false);\n      }\n    });\n  }\n\n  /**\r\n   * Modifie un forfait déjà existant dans la BD.\r\n   * @param {*} id id du forfait\r\n   * @param {*} nom nom du forfait\r\n   * @param {*} type type de forfait\r\n   * @param {*} prix prix du forfait\r\n   * @param {*} description description du forfait\r\n   */\n  function modifForfait(id, nom, type, prix, description) {\n    Axios.put(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {\n      idForfait: id,\n      nom: nom,\n      type: type,\n      prix: prix,\n      description: description\n    }).then(response => {\n      if (response.data.Forfait) {\n        props.updateListeForfait();\n        setForfaitModifActuel(null);\n      }\n    });\n  }\n\n  /**\r\n   * Supprime le forfait selon le id en paramètre\r\n   * @param {number} id id représentant le forfait\r\n   */\n  function deleteForfait(id) {\n    Axios.delete(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {\n      data: {\n        idForfait: Number(id)\n      }\n    }).then(response => {\n      if (response.data.Forfait) {\n        props.updateListeForfait();\n      }\n    });\n  }\n}\n_s(AdminListeForfait, \"y3LNKEAyJ4QUxE1QHrZ6Ep+EJqs=\");\n_c = AdminListeForfait;\nexport default AdminListeForfait;\nvar _c;\n$RefreshReg$(_c, \"AdminListeForfait\");","map":{"version":3,"names":["React","useState","ReactComponent","EditSymbol","CloseSymbol","AdminModalForfait","Axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminListeForfait","props","_s","isAddForfait","setIsAddForfait","forfaitModifActuel","setForfaitModifActuel","children","setModalShow","addForfait","nom","type","prix","description","fileName","_jsxFileName","lineNumber","columnNumber","modifForfait","id","className","onClick","listShown","map","forfait","deleteForfait","post","process","env","REACT_APP_DOMAIN","then","response","data","Forfait","updateListeForfait","put","idForfait","delete","Number","_c","$RefreshReg$"],"sources":["C:/Users/1867319/Documents/GitHub/H-2023-Projet-Synthese/Service_Video/react_js/src/components/adminListe/AdminListeForfait.js"],"sourcesContent":["import { React, useState} from \"react\";\r\nimport { ReactComponent as EditSymbol } from \"./../../images/symboles/edit.svg\";\r\nimport { ReactComponent as CloseSymbol } from \"./../../images/symboles/close.svg\";\r\nimport AdminModalForfait from \"../modals/admin/AdminModalForfait\";\r\nimport Axios from 'axios';\r\n\r\n/**\r\n * Affiche la liste des forfaits sur la DB.\r\n * Cet affichage permet de faire des ajout/modifications/suppression de forfaits.\r\n * @param {*} props\r\n * @param {[]} props.listShown liste des Forfaits inscrit sur la DB.\r\n * @param {() => void} props.updateListeForfait Permet de relancer \"getListeAdminForfait()\" pour remettre à jour la liste.\r\n * @returns \r\n */\r\nfunction AdminListeForfait(props) {\r\n\r\n    const [isAddForfait, setIsAddForfait] = useState(false);\r\n    const [forfaitModifActuel, setForfaitModifActuel] = useState(null);\r\n\r\n    return (\r\n        <>\r\n            {isAddForfait ? <AdminModalForfait setModalShow={() => setIsAddForfait()} addForfait={(nom, type, prix, description) => addForfait(nom, type, prix, description)} /> : null\r\n            }\r\n            {forfaitModifActuel !== null ? <AdminModalForfait setModalShow={() => setForfaitModifActuel(null)} modifForfait={(id, nom, type, prix, description) => modifForfait(id, nom, type, prix, description)} forfaitModifActuel={forfaitModifActuel} /> : null\r\n            }\r\n            <div className=' bg-slate-500 hover:bg-slate-700 text-white font-bold py-2 px-4 rounded-2xl mt-7' onClick={() => setIsAddForfait(true)}>\r\n                Ajouter un forfait\r\n            </div>\r\n            <table className=\"white-bx w-full\">\r\n                <thead>\r\n                    <tr className=\"my-8\">\r\n                        <th>Nom</th>\r\n                        <th>Type</th>\r\n                        <th>Prix</th>\r\n                        <th>Description</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.listShown.map((forfait) => (\r\n                        <tr>\r\n                            <td>{forfait.nom}</td>\r\n                            <td>{forfait.type}</td>\r\n                            <td>{forfait.prix}</td>\r\n                            <td>{forfait.description}</td>\r\n                            <td className=\"flex flex-row\">\r\n                                <EditSymbol className='w-6 mx-2 fill-slate-500 hover:fill-slate-700' onClick={() => setForfaitModifActuel(forfait)} />\r\n                                <CloseSymbol className='w-6  mx-1 fill-slate-500 hover:fill-slate-700' onClick={() => deleteForfait(forfait.id)} />\r\n                            </td>\r\n                        </tr>\r\n\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Ajouter un nouveau forfait\r\n     * @param {*} nom nom du forfait\r\n     * @param {*} type type de forfait\r\n     * @param {*} prix prix du forfait\r\n     * @param {*} description description du forfait\r\n     */\r\n    function addForfait(nom, type, prix, description) {\r\n        Axios.post(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {\r\n            nom: nom,\r\n            type: type,\r\n            prix: prix,\r\n            description: description\r\n        }).then((response) => {\r\n            if (response.data.Forfait) {\r\n                props.updateListeForfait();\r\n                setIsAddForfait(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Modifie un forfait déjà existant dans la BD.\r\n     * @param {*} id id du forfait\r\n     * @param {*} nom nom du forfait\r\n     * @param {*} type type de forfait\r\n     * @param {*} prix prix du forfait\r\n     * @param {*} description description du forfait\r\n     */\r\n    function modifForfait(id, nom, type, prix, description) {\r\n        Axios.put(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {\r\n            idForfait: id,\r\n            nom: nom,\r\n            type: type,\r\n            prix: prix,\r\n            description: description\r\n        }).then((response) => {\r\n            if (response.data.Forfait) {\r\n                props.updateListeForfait();\r\n                setForfaitModifActuel(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Supprime le forfait selon le id en paramètre\r\n     * @param {number} id id représentant le forfait\r\n     */\r\n    function deleteForfait(id) {\r\n        Axios.delete(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {\r\n            data: {\r\n                idForfait: Number(id)\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.Forfait) {\r\n                props.updateListeForfait();\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\nexport default AdminListeForfait;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}