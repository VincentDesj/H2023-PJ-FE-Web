{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1867319\\\\Documents\\\\GitHub\\\\H-2023-Projet-Synthese\\\\Service_Video\\\\react_js\\\\src\\\\screens\\\\admin\\\\GestionAdminScreen.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport AdminOnglet from '../../components/AdminOnglet';\nimport AdminListeCompagnie from '../../components/adminListe/AdminListeCompagnie';\nimport AdminListeForfait from '../../components/adminListe/AdminListeForfait';\nimport AdminListeUtilisateur from '../../components/adminListe/AdminListeUtilisateur';\nimport AdminListeVideo from '../../components/adminListe/AdminListeVideo';\n\n/**\r\n * Affichage qui remplace la page profil-utilisateur pour les administrateurs.\r\n * Elle offre la possibilité de ajouter/modifier/supprimer les utilisateurs, compagnies, forfaits et videos.\r\n * @returns \r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GestionAdminScreen() {\n  _s();\n  const nomsOnglets = [\"Utilisateurs\", \"Compagnie\", \"Forfaits\", \"Vidéos\"];\n  const [showOnglet, setshowOnglet] = useState([true, false, false, false]);\n  const [listeAdminUtilisateur, setListeAdminUtilisateur] = useState([]);\n  const [listeAdminCompagnie, setListeAdminCompagnie] = useState([]);\n  const [listeAdminForfait, setListeAdminForfait] = useState([]);\n  const [listeAdminVideo, setListeAdminVideo] = useState([]);\n  useEffect(() => {\n    getListeAdminUtilisateur();\n    getListeAdminCompagnie();\n    getListeAdminForfait();\n    getListeAdminVideo();\n  }, []);\n  let ongletActuel = showOnglet.indexOf(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-center w-full h-full mt-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-left text-2xl my-4 py-4\",\n      children: \"Les Forfaits disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-8/12 items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-around items-center \",\n        children: nomsOnglets.map((nom, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => changeOnglet(index),\n          children: /*#__PURE__*/_jsxDEV(AdminOnglet, {\n            isShown: showOnglet.at(index),\n            nom: nom\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), {\n        0: listeAdminUtilisateur ? /*#__PURE__*/_jsxDEV(AdminListeUtilisateur, {\n          listShown: listeAdminUtilisateur,\n          updateListeUtilisateur: () => getListeAdminUtilisateur()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 52\n        }, this) : null,\n        1: listeAdminCompagnie ? /*#__PURE__*/_jsxDEV(AdminListeCompagnie, {\n          listShown: listeAdminCompagnie,\n          updateListeCompagnie: () => getListeAdminCompagnie()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 50\n        }, this) : null,\n        2: listeAdminForfait ? /*#__PURE__*/_jsxDEV(AdminListeForfait, {\n          listShown: listeAdminForfait,\n          updateListeForfait: () => getListeAdminForfait()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 48\n        }, this) : null,\n        3: listeAdminVideo ? /*#__PURE__*/_jsxDEV(AdminListeVideo, {\n          listShown: listeAdminVideo,\n          updateListeVideo: () => getListeAdminVideo()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 46\n        }, this) : null\n      }[ongletActuel]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n\n  /**\r\n   * Permet de changer l'affichage de la liste selon l'index de l'onglet selectionné. \r\n   * @param {*} index Représente l'onglet sélectionné.\r\n   */\n  function changeOnglet(index) {\n    const newShowOnglet = [false, false, false, false];\n    newShowOnglet[index] = true;\n    setshowOnglet(newShowOnglet);\n  }\n\n  /**\r\n   * Retourne la liste des utilisateurs inscrits dans la BD.\r\n   */\n  function getListeAdminUtilisateur() {\n    Axios.get(process.env.REACT_APP_DOMAIN + \"/Admin\", {}).then(response => {\n      if (response.data.Utilisateurs) {\n        const newlistUtilisateurs = [];\n        response.data.Utilisateurs.map(utilisateur => {\n          newlistUtilisateurs.push({\n            id: utilisateur.id_utilisateur,\n            nom: utilisateur.nom_utilisateur,\n            prenom: utilisateur.prenom_utilisateur,\n            courriel: utilisateur.courriel_utilisateur,\n            telephone: utilisateur.telephone_utilisateur,\n            typeRole: utilisateur.type_role\n          });\n          return null;\n        });\n        setListeAdminUtilisateur(newlistUtilisateurs);\n      }\n    });\n  }\n\n  /**\r\n   * Retourne la liste des compagnies liés aux utilisateurs inscrits dans la BD.\r\n   */\n  function getListeAdminCompagnie() {\n    Axios.get(process.env.REACT_APP_DOMAIN + \"/AdminCompagnie\", {}).then(response => {\n      if (response.data.Compagnies) {\n        const newlistCompagnies = [];\n        response.data.Compagnies.map(compagnie => {\n          newlistCompagnies.push({\n            id: compagnie.id_compagnie,\n            nom: compagnie.nom_compagnie,\n            adresse: compagnie.adresse_compagnie,\n            noRegistre: compagnie.noRegistre_compagnie,\n            courriel: compagnie.courriel_compagnie,\n            telephone: compagnie.telephone_compagnie,\n            idUtilisateur: compagnie.id_utilisateur\n          });\n          return null;\n        });\n        setListeAdminCompagnie(newlistCompagnies);\n      }\n    });\n  }\n\n  /**\r\n   * Retourne la liste des forfaits inscrits dans la BD.\r\n   */\n  function getListeAdminForfait() {\n    Axios.get(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {}).then(response => {\n      if (response.data.Forfaits) {\n        const newlistForfaits = [];\n        response.data.Forfaits.map(forfait => {\n          newlistForfaits.push({\n            id: forfait.id_forfait,\n            nom: forfait.nom_forfait,\n            type: forfait.type_forfait,\n            prix: forfait.prix_forfait,\n            description: forfait.description_forfait\n          });\n          return null;\n        });\n        setListeAdminForfait(newlistForfaits);\n      }\n    });\n  }\n\n  /**\r\n   * Retourne la liste des vidéos inscrits dans la BD.\r\n   */\n  function getListeAdminVideo() {\n    Axios.get(process.env.REACT_APP_DOMAIN + \"/AdminVideo\", {}).then(response => {\n      if (response.data.Videos) {\n        const newlistVideos = [];\n        response.data.Videos.map(video => {\n          newlistVideos.push({\n            id: video.id_video,\n            titre: video.titre_video,\n            description: video.description_video,\n            id_forfait: video.id_forfait,\n            imageUrl: video.image_video,\n            videoUrl: video.video_video\n          });\n          return null;\n        });\n        setListeAdminVideo(newlistVideos);\n      }\n    });\n  }\n}\n_s(GestionAdminScreen, \"4XerZlZZHlfySOzxBo1dmlpTpv8=\");\n_c = GestionAdminScreen;\nexport default GestionAdminScreen;\nvar _c;\n$RefreshReg$(_c, \"GestionAdminScreen\");","map":{"version":3,"names":["React","useState","useEffect","Axios","AdminOnglet","AdminListeCompagnie","AdminListeForfait","AdminListeUtilisateur","AdminListeVideo","jsxDEV","_jsxDEV","GestionAdminScreen","_s","nomsOnglets","showOnglet","setshowOnglet","listeAdminUtilisateur","setListeAdminUtilisateur","listeAdminCompagnie","setListeAdminCompagnie","listeAdminForfait","setListeAdminForfait","listeAdminVideo","setListeAdminVideo","getListeAdminUtilisateur","getListeAdminCompagnie","getListeAdminForfait","getListeAdminVideo","ongletActuel","indexOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","nom","index","onClick","changeOnglet","isShown","at","listShown","updateListeUtilisateur","updateListeCompagnie","updateListeForfait","updateListeVideo","newShowOnglet","get","process","env","REACT_APP_DOMAIN","then","response","data","Utilisateurs","newlistUtilisateurs","utilisateur","push","id","id_utilisateur","nom_utilisateur","prenom","prenom_utilisateur","courriel","courriel_utilisateur","telephone","telephone_utilisateur","typeRole","type_role","Compagnies","newlistCompagnies","compagnie","id_compagnie","nom_compagnie","adresse","adresse_compagnie","noRegistre","noRegistre_compagnie","courriel_compagnie","telephone_compagnie","idUtilisateur","Forfaits","newlistForfaits","forfait","id_forfait","nom_forfait","type","type_forfait","prix","prix_forfait","description","description_forfait","Videos","newlistVideos","video","id_video","titre","titre_video","description_video","imageUrl","image_video","videoUrl","video_video","_c","$RefreshReg$"],"sources":["C:/Users/1867319/Documents/GitHub/H-2023-Projet-Synthese/Service_Video/react_js/src/screens/admin/GestionAdminScreen.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport AdminOnglet from '../../components/AdminOnglet';\r\nimport AdminListeCompagnie from '../../components/adminListe/AdminListeCompagnie';\r\nimport AdminListeForfait from '../../components/adminListe/AdminListeForfait';\r\nimport AdminListeUtilisateur from '../../components/adminListe/AdminListeUtilisateur';\r\nimport AdminListeVideo from '../../components/adminListe/AdminListeVideo';\r\n\r\n\r\n/**\r\n * Affichage qui remplace la page profil-utilisateur pour les administrateurs.\r\n * Elle offre la possibilité de ajouter/modifier/supprimer les utilisateurs, compagnies, forfaits et videos.\r\n * @returns \r\n */\r\nfunction GestionAdminScreen() {\r\n\r\n    const nomsOnglets = [\"Utilisateurs\", \"Compagnie\", \"Forfaits\", \"Vidéos\"];\r\n    const [showOnglet, setshowOnglet] = useState([true, false, false, false]);\r\n\r\n    const [listeAdminUtilisateur, setListeAdminUtilisateur] = useState([]);\r\n    const [listeAdminCompagnie, setListeAdminCompagnie] = useState([]);\r\n    const [listeAdminForfait, setListeAdminForfait] = useState([]);\r\n    const [listeAdminVideo, setListeAdminVideo] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        getListeAdminUtilisateur();\r\n        getListeAdminCompagnie();\r\n        getListeAdminForfait();\r\n        getListeAdminVideo();\r\n    }, []);\r\n\r\n    let ongletActuel = showOnglet.indexOf(true);\r\n\r\n    return (\r\n        <div className='flex flex-row justify-center w-full h-full mt-16'>\r\n            <div className='text-left text-2xl my-4 py-4'>Les Forfaits disponibles</div>\r\n            <div className='flex flex-col w-8/12 items-start'>\r\n                <div className='flex flex-row justify-around items-center '>\r\n                    {nomsOnglets.map((nom, index) => (\r\n                        <div onClick={() => changeOnglet(index)}>\r\n                            <AdminOnglet key={index} isShown={showOnglet.at(index)} nom={nom} />\r\n                        </div>\r\n\r\n                    ))}\r\n                </div>\r\n                {\r\n                    {\r\n                        0: listeAdminUtilisateur ? <AdminListeUtilisateur listShown={listeAdminUtilisateur} updateListeUtilisateur={() => getListeAdminUtilisateur()} /> : null,\r\n                        1: listeAdminCompagnie ? <AdminListeCompagnie listShown={listeAdminCompagnie} updateListeCompagnie={() => getListeAdminCompagnie()} /> : null,\r\n                        2: listeAdminForfait ? <AdminListeForfait listShown={listeAdminForfait} updateListeForfait={() => getListeAdminForfait()} /> : null,\r\n                        3: listeAdminVideo ? <AdminListeVideo listShown={listeAdminVideo} updateListeVideo={() => getListeAdminVideo()} /> : null\r\n                    }[ongletActuel]\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    /**\r\n     * Permet de changer l'affichage de la liste selon l'index de l'onglet selectionné. \r\n     * @param {*} index Représente l'onglet sélectionné.\r\n     */\r\n    function changeOnglet(index) {\r\n        const newShowOnglet = [false, false, false, false];\r\n\r\n        newShowOnglet[index] = true\r\n        setshowOnglet(newShowOnglet);\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des utilisateurs inscrits dans la BD.\r\n     */\r\n    function getListeAdminUtilisateur() {\r\n        Axios.get(process.env.REACT_APP_DOMAIN + \"/Admin\", {\r\n        }).then((response) => {\r\n            if (response.data.Utilisateurs) {\r\n                const newlistUtilisateurs = [];\r\n\r\n                response.data.Utilisateurs.map((utilisateur) => {\r\n                    newlistUtilisateurs.push({\r\n                        id: utilisateur.id_utilisateur,\r\n                        nom: utilisateur.nom_utilisateur,\r\n                        prenom: utilisateur.prenom_utilisateur,\r\n                        courriel: utilisateur.courriel_utilisateur,\r\n                        telephone: utilisateur.telephone_utilisateur,\r\n                        typeRole: utilisateur.type_role\r\n                    });\r\n                    return null;\r\n                });\r\n\r\n                setListeAdminUtilisateur(newlistUtilisateurs);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des compagnies liés aux utilisateurs inscrits dans la BD.\r\n     */\r\n    function getListeAdminCompagnie() {\r\n        Axios.get(process.env.REACT_APP_DOMAIN + \"/AdminCompagnie\", {\r\n        }).then((response) => {\r\n            if (response.data.Compagnies) {\r\n                const newlistCompagnies = [];\r\n\r\n                response.data.Compagnies.map((compagnie) => {\r\n                    newlistCompagnies.push({\r\n                        id: compagnie.id_compagnie,\r\n                        nom: compagnie.nom_compagnie,\r\n                        adresse: compagnie.adresse_compagnie,\r\n                        noRegistre: compagnie.noRegistre_compagnie,\r\n                        courriel: compagnie.courriel_compagnie,\r\n                        telephone: compagnie.telephone_compagnie,\r\n                        idUtilisateur: compagnie.id_utilisateur\r\n                    });\r\n                    return null;\r\n                });\r\n\r\n                setListeAdminCompagnie(newlistCompagnies);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des forfaits inscrits dans la BD.\r\n     */\r\n    function getListeAdminForfait() {\r\n        Axios.get(process.env.REACT_APP_DOMAIN + \"/AdminForfait\", {\r\n        }).then((response) => {\r\n            if (response.data.Forfaits) {\r\n                const newlistForfaits = [];\r\n\r\n                response.data.Forfaits.map((forfait) => {\r\n                    newlistForfaits.push({\r\n                        id: forfait.id_forfait,\r\n                        nom: forfait.nom_forfait,\r\n                        type: forfait.type_forfait,\r\n                        prix: forfait.prix_forfait,\r\n                        description: forfait.description_forfait\r\n                    });\r\n                    return null;\r\n                });\r\n\r\n                setListeAdminForfait(newlistForfaits);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des vidéos inscrits dans la BD.\r\n     */\r\n    function getListeAdminVideo() {\r\n        Axios.get(process.env.REACT_APP_DOMAIN + \"/AdminVideo\", {\r\n        }).then((response) => {\r\n            if (response.data.Videos) {\r\n                const newlistVideos = [];\r\n\r\n                response.data.Videos.map((video) => {\r\n                    newlistVideos.push({\r\n                        id: video.id_video,\r\n                        titre: video.titre_video,\r\n                        description: video.description_video,\r\n                        id_forfait: video.id_forfait,\r\n                        imageUrl: video.image_video,\r\n                        videoUrl: video.video_video,\r\n                    });\r\n                    return null;\r\n                });\r\n\r\n                setListeAdminVideo(newlistVideos);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\nexport default GestionAdminScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}